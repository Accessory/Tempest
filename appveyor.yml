configuration:
  - release

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015  # used as mingw
      GENERATOR: "Ninja"
      CC:        C:/Qt/Tools/mingw810_64/bin/gcc.exe
      CXX:       C:/Qt/Tools/mingw810_64/bin/g++.exe

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      GENERATOR: "NMake Makefiles JOM"
      VCVARSALL: "%VS140COMNTOOLS%/../../VC/vcvarsall.bat"
      PLATFORM:  x64

    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
      GENERATOR: ""

install:
- git submodule -q update --init --recursive
# Vulkan SDK and thirdparty
- cmd: curl -L --silent --show-error --output VulkanSDK.exe https://sdk.lunarg.com/sdk/download/1.2.170.0/windows/vulkan_sdk.exe
- cmd: VulkanSDK.exe /S
- cmd: set VK_SDK_PATH=C:/VulkanSDK/1.2.170.0

- sh:  sudo apt-get update
- sh:  sudo apt-get --yes install libvulkan-dev libasound2-dev
- sh:  curl -L --silent --show-error --output VulkanSDK.tar.gz https://sdk.lunarg.com/sdk/download/1.2.170.0/linux/vulkan_sdk.tar.gz
- sh:  mkdir VulkanSDK
- sh:  tar -xzf VulkanSDK.tar.gz -C ./VulkanSDK
- sh:  export VK_SDK_PATH=$APPVEYOR_BUILD_FOLDER/VulkanSDK/1.2.170.0/x86_64

# GLSL compiller
- mkdir glslang
- cd glslang
- cmd: curl -fsSL -o glslang-master-windows-x64-Release.zip https://github.com/KhronosGroup/glslang/releases/download/master-tot/glslang-master-windows-x64-Release.zip
- sh:  curl -fsSL -o glslang-master-linux-Release.zip https://github.com/KhronosGroup/glslang/releases/download/master-tot/glslang-master-linux-Release.zip
- cmd: 7z x glslang-master-windows-x64-Release.zip
- sh:  7z x glslang-master-linux-Release.zip
- cd ..
- cmd: "SET PATH=%APPVEYOR_BUILD_FOLDER%\\glslang\\bin;%PATH%"
- sh: export PATH="$PATH:$APPVEYOR_BUILD_FOLDER/glslang/bin"

before_build:
# Prepare the out-of-source build directory.
  - mkdir build
  - cmd: set PATH=C:/Qt/Tools/mingw810_64/bin;C:/Qt/Tools/QtCreator/bin;%Path%

build_script:
  - cmake --version
  - cmd: if "%GENERATOR%" == "MinGW Makefiles" gcc --version
  - cmd: if "%GENERATOR%" == "MinGW Makefiles" g++ --version

  - cd Tests/tests
  - cmd: if NOT "%VCVARSALL%" == "" call "%VCVARSALL%" %PLATFORM%
  - cmd: cmake -H. -B../../build -G "%GENERATOR%" -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo -DCMAKE_SH=CMAKE_SH-NOTFOUND
  - sh:  cmake -H. -B../../build                  -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo
  - cmake --build ../../build --target TempestTests

test_script:
  - cmd: set Path=C:/Qt/Tools/mingw530_32/bin;%Path%
  - cmd: cd %APPVEYOR_BUILD_FOLDER%\build\testsuite
  # - cmd: TempestTests.exe   disable, since appveyor image doesn't have vulkan drievr anymore
  - sh:  cd $APPVEYOR_BUILD_FOLDER/build/testsuite
  - sh:  ./TempestTests

artifacts:
  - path: build/tempest/tempest.zip
    name: archive

deploy:
  release: tempest-win32-v$(appveyor_build_version)
  description: 'no release description'
  provider: GitHub
  auth_token:
    secure: 9IgewrZL7gvgL+SofpEkJ6ERQDcsfVBHMUv5qhkj00wfELRiYVJtudQzPVDFE8cq
  artifact: archive
  draft: true
  force_update: true
  prerelease: true
  on:
    branch: master                # release from master branch only
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    appveyor_repo_tag: true       # deploy on tag push only

configuration:
  - release

environment:
  matrix:
    - image: Visual Studio 2017
      VSVER: 14.0 # Visual Studio 2015
      CXX:   msvc2015

    - image : Visual Studio 2017
      CC:    C:/Qt/Tools/mingw530_32/bin/gcc.exe
      CXX:   C:/Qt/Tools/mingw530_32/bin/g++.exe

    - image : Ubuntu1804

install:
- git submodule -q update --init --recursive
# Vulkan SDK and thirdparty
- cmd: |
  curl -L --silent --show-error --output VulkanSDK.exe https://vulkan.lunarg.com/sdk/download/1.2.135.0/windows/VulkanSDK-1.2.135.0-Installer.exe?Human=true
  VulkanSDK.exe /S
  set VK_SDK_PATH=C:/VulkanSDK/1.2.135.0
- sh: |
  sudo apt-get update
  sudo apt-get --yes install libvulkan-dev libasound2-dev
  wget -O vulkansdk-linux-x86_64-1.2.135.0.tar.gz https://vulkan.lunarg.com/sdk/download/1.2.135.0/linux/vulkansdk-linux-x86_64-1.2.135.0.tar.gz?Human=true
  mkdir VulkanSDK
  tar -xzf vulkansdk-linux-x86_64-1.2.135.0.tar.gz -C ./VulkanSDK
  export VK_SDK_PATH=$APPVEYOR_BUILD_FOLDER/VulkanSDK/1.2.135.0/x86_64
# GLSL compiller
- mkdir glslang
- cd glslang
- cmd: |
  curl -fsSL -o glslang-master-windows-x64-Release.zip https://github.com/KhronosGroup/glslang/releases/download/master-tot/glslang-master-windows-x64-Release.zip
  7z x glslang-master-windows-x64-Release.zip
- sh: |
  curl -fsSL -o glslang-master-linux-Release.zip https://github.com/KhronosGroup/glslang/releases/download/master-tot/glslang-master-linux-Release.zip
  7z x glslang-master-linux-Release.zip
- cd ..
- cmd: "SET PATH=%APPVEYOR_BUILD_FOLDER%\\glslang\\bin;%PATH%"
- sh: export PATH="$PATH:$APPVEYOR_BUILD_FOLDER/glslang/bin"

before_build:
# Prepare the out-of-source build directory.
  - mkdir build
  - cmd: set Path=C:/Qt/Tools/mingw530_32/bin;%Path%

build_script:
  - cmake --version
  - gcc   --version
  - g++   --version

  - cd Tests/tests
  - cmd: cmake -H. -B../../build -G "MinGW Makefiles" -DCMAKE_SH=CMAKE_SH-NOTFOUND -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_SHARED_MOLTEN_TEMPEST:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo "-DCMAKE_PREFIX_PATH:STRING=C:\Qt\Tools\mingw530_32\bin" "-DCMAKE_MAKE_PROGRAM:STRING=C:\Qt\Tools\mingw530_32\bin\mingw32-make.exe"
  - sh:  cmake -H. -B../../build -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo -DBUILD_SHARED_MOLTEN_TEMPEST:BOOL=ON
  - cmake --build ../../build --target all

test_script:
  - cmd: cd %APPVEYOR_BUILD_FOLDER%\build\testsuite
  - cmd: TempestTests.exe
  - sh:  cd $APPVEYOR_BUILD_FOLDER/build/testsuite
  - sh:  ./TempestTests

artifacts:
  - path: build/tempest/tempest.zip
    name: archive

deploy:
  release: tempest-win32-v$(appveyor_build_version)
  description: 'no release description'
  provider: GitHub
  auth_token:
    secure: 9IgewrZL7gvgL+SofpEkJ6ERQDcsfVBHMUv5qhkj00wfELRiYVJtudQzPVDFE8cq
  artifact: archive
  draft: true
  force_update: true
  prerelease: true
  on:
    branch: master                # release from master branch only
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    appveyor_repo_tag: true       # deploy on tag push only

configuration:
  - release

image:
  - Visual Studio 2017
  - Visual Studio 2015 # used as mingw
  - Ubuntu1804

for:
- matrix:
    only:
      - image: Visual Studio 2017
  environment:
    - GENERATOR: Visual Studio 15 2017

- matrix:
    only:
      - image: Visual Studio 2015
  environment:
    - GENERATOR: "MinGW Makefiles"
      CC:        C:/Qt/Tools/mingw530_32/bin/gcc.exe
      CXX:       C:/Qt/Tools/mingw530_32/bin/g++.exe

install:
- git submodule -q update --init --recursive
# Vulkan SDK and thirdparty
- cmd: curl -L --silent --show-error --output VulkanSDK.exe https://vulkan.lunarg.com/sdk/download/1.2.135.0/windows/VulkanSDK-1.2.135.0-Installer.exe?Human=true
- cmd: VulkanSDK.exe /S
- cmd: set VK_SDK_PATH=C:/VulkanSDK/1.2.135.0

- sh:  sudo apt-get update
- sh:  sudo apt-get --yes install libvulkan-dev libasound2-dev
- sh:  wget -O vulkansdk-linux-x86_64-1.2.135.0.tar.gz https://vulkan.lunarg.com/sdk/download/1.2.135.0/linux/vulkansdk-linux-x86_64-1.2.135.0.tar.gz?Human=true
- sh:  mkdir VulkanSDK
- sh:  tar -xzf vulkansdk-linux-x86_64-1.2.135.0.tar.gz -C ./VulkanSDK
- sh:  export VK_SDK_PATH=$APPVEYOR_BUILD_FOLDER/VulkanSDK/1.2.135.0/x86_64

# GLSL compiller
- mkdir glslang
- cd glslang
- cmd: curl -fsSL -o glslang-master-windows-x64-Release.zip https://github.com/KhronosGroup/glslang/releases/download/master-tot/glslang-master-windows-x64-Release.zip
- sh:  curl -fsSL -o glslang-master-linux-Release.zip https://github.com/KhronosGroup/glslang/releases/download/master-tot/glslang-master-linux-Release.zip
- cmd: 7z x glslang-master-windows-x64-Release.zip
- sh:  7z x glslang-master-linux-Release.zip
- cd ..
- cmd: "SET PATH=%APPVEYOR_BUILD_FOLDER%\\glslang\\bin;%PATH%"
- sh: export PATH="$PATH:$APPVEYOR_BUILD_FOLDER/glslang/bin"

before_build:
# Prepare the out-of-source build directory.
  - mkdir build
  - cmd: set Path=C:/Qt/Tools/mingw530_32/bin;%Path%

build_script:
  - cmake --version
  - gcc   --version
  - g++   --version

  - cd Tests/tests
  - cmd: cmake -H. -B../../build -G "%GENERATOR%" -DBUILD_SHARED_MOLTEN_TEMPEST:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo "-DCMAKE_PREFIX_PATH:STRING=C:\Qt\Tools\mingw530_32\bin" "-DCMAKE_MAKE_PROGRAM:STRING=C:\Qt\Tools\mingw530_32\bin\mingw32-make.exe"
  - sh:  cmake -H. -B../../build                -DBUILD_SHARED_MOLTEN_TEMPEST:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo
  - cmake --build ../../build --target all

test_script:
  - cmd: cd %APPVEYOR_BUILD_FOLDER%\build\testsuite
  - cmd: TempestTests.exe
  - sh:  cd $APPVEYOR_BUILD_FOLDER/build/testsuite
  - sh:  ./TempestTests

artifacts:
  - path: build/tempest/tempest.zip
    name: archive

deploy:
  release: tempest-win32-v$(appveyor_build_version)
  description: 'no release description'
  provider: GitHub
  auth_token:
    secure: 9IgewrZL7gvgL+SofpEkJ6ERQDcsfVBHMUv5qhkj00wfELRiYVJtudQzPVDFE8cq
  artifact: archive
  draft: true
  force_update: true
  prerelease: true
  on:
    branch: master                # release from master branch only
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    appveyor_repo_tag: true       # deploy on tag push only

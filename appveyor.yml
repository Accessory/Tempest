image:
  - Visual Studio 2017
  - Ubuntu1804

configuration:
  - release

before_build:
  - sh:  sudo apt-get --yes install libgl-dev libvulkan-dev
  # Prepare the out-of-source build directory.
  - mkdir build
  - git submodule update --init --recursive
  - cmd: set Path=C:/Qt/Tools/mingw530_32/bin;%Path%
  - cmd: set CC=C:/Qt/Tools/mingw530_32/bin/gcc.exe
  - cmd: set CXX=C:/Qt/Tools/mingw530_32/bin/g++.exe
  - cmd: curl -L --silent --show-error --output VulkanSDK.exe https://vulkan.lunarg.com/sdk/download/1.1.121.1/windows/VulkanSDK-1.1.121.1-Installer.exe?Human=true
  - cmd: VulkanSDK.exe /S
  - cmd: set VK_SDK_PATH=C:/VulkanSDK/1.1.121.1
  - cmd: mkdir glslang
  - cmd: cd glslang
  - cmd: curl -fsSL -o glslang-master-windows-x64-Release.zip https://github.com/KhronosGroup/glslang/releases/download/master-tot/glslang-master-windows-x64-Release.zip
  - cmd: 7z x glslang-master-windows-x64-Release.zip
  - cmd: cd ..
  - cmd: "SET PATH=%APPVEYOR_BUILD_FOLDER%\\glslang\\bin;%PATH%"
  - sh:  wget -O vulkansdk-linux-x86_64-1.1.121.1.tar.gz https://vulkan.lunarg.com/sdk/download/1.1.121.1/linux/vulkansdk-linux-x86_64-1.1.121.1.tar.gz?Human=true
  - sh:  mkdir VulkanSDK
  - sh:  tar -xzf vulkansdk-linux-x86_64-1.1.121.1.tar.gz -C ./VulkanSDK
  - sh:  export VK_SDK_PATH=$APPVEYOR_BUILD_FOLDER/VulkanSDK/1.1.121.1/x86_64
  - sh: mkdir glslang
  - sh: cd glslang
  - sh: curl -fsSL -o glslang-master-linux-Release.zip https://github.com/KhronosGroup/glslang/releases/download/master-tot/glslang-master-linux-Release.zip
  - sh: 7z x glslang-master-linux-Release.zip
  - sh: cd ..
  - sh: export PATH="$PATH:$APPVEYOR_BUILD_FOLDER/glslang/bin"

build_script:
  - cmake --version
  - gcc   --version
  - g++   --version

  - cd Tests/tests
  - cmd: cmake -H. -B../../build -G "MinGW Makefiles" -DCMAKE_SH=CMAKE_SH-NOTFOUND -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_SHARED_MOLTEN_TEMPEST:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo "-DCMAKE_PREFIX_PATH:STRING=C:\Qt\Tools\mingw530_32\bin" "-DCMAKE_MAKE_PROGRAM:STRING=C:\Qt\Tools\mingw530_32\bin\mingw32-make.exe"
  - sh:  cmake -H. -B../../build -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo -DBUILD_SHARED_MOLTEN_TEMPEST:BOOL=ON
  - cmake --build ../../build --target all

test_script:
  - cmd: cd %APPVEYOR_BUILD_FOLDER%\build\testsuite
  - cmd: TempestTests.exe
  - sh:  cd $APPVEYOR_BUILD_FOLDER\build\testsuite
  - sh:  ./TempestTests

artifacts:
  - path: build/tempest/tempest.zip
    name: archive

deploy:
  release: tempest-win32-v$(appveyor_build_version)
  description: 'no release description'
  provider: GitHub
  auth_token:
    secure: 9IgewrZL7gvgL+SofpEkJ6ERQDcsfVBHMUv5qhkj00wfELRiYVJtudQzPVDFE8cq
  artifact: archive
  draft: true
  force_update: true
  prerelease: true
  on:
    branch: master                # release from master branch only
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    appveyor_repo_tag: true       # deploy on tag push only
